{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/services/Pixabay-api.js","components/Loader/Loader.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","request","handleSubmit","event","preventDefault","props","onSubmit","handleNameChange","setState","currentTarget","value","toLowerCase","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","pic","previewURL","id","tags","src","alt","api","fetchPictures","page","fetch","then","response","ok","json","Promise","reject","Error","LoaderPics","color","height","width","timeout","Button","pageNum","changePage","counter","console","log","window","scrollTo","top","document","documentElement","scrollHeight","behavior","onPageChange","onClick","ImageGallery","pictures","status","error","prevProps","prevState","prevRequest","nextRequest","prevPage","nextPage","picsAPI","obj","newPicsPage","hits","total","catch","map","App","submiteData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3089b37b.chunk.js","sourcesContent":["import { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport '../styles.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    request: ' ',\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.request);\r\n  };\r\n  handleNameChange = event => {\r\n    this.setState({ request: event.currentTarget.value.toLowerCase() });\r\n  };\r\n  render() {\r\n    const { request } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={request}\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","export default function ImageGalleryItem({ pic: { id, previewURL, tags } }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img src={previewURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n","function fetchPictures(request, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${request}&page=${page}&key=23343494-643d22eb41994b430f7c237c0&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Нет картинок по запросу ${request}`));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchPictures,\r\n};\r\n\r\nexport default api;\r\n","import Loader from 'react-loader-spinner';\r\nimport { Component } from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nexport default class LoaderPics extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\n\r\nexport default class Button extends Component {\r\n  state = {\r\n    pageNum: 2,\r\n  };\r\n\r\n  changePage = () => {\r\n    const counter = this.state.pageNum + 1;\r\n    this.setState({ pageNum: counter });\r\n    console.log(this.state);\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n    this.props.onPageChange(this.state.pageNum);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button type=\"button\" className=\"Button\" onClick={this.changePage}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport picsAPI from '../services/Pixabay-api';\r\nimport LoaderPics from '../Loader';\r\nimport Button from '../Button/';\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    pictures: [],\r\n    status: 'idle',\r\n    error: null,\r\n    page: 1,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevRequest = prevProps.request;\r\n    const nextRequest = this.props.request;\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevRequest !== nextRequest || prevPage !== nextPage) {\r\n      this.setState({ status: 'pending' });\r\n\r\n      picsAPI\r\n        .fetchPictures(nextRequest, nextPage)\r\n        .then(obj => {\r\n          const newPicsPage = [...this.state.pictures, ...obj.hits];\r\n          this.setState({ pictures: newPicsPage, status: 'resolved' });\r\n          console.log(newPicsPage);\r\n          return obj;\r\n        })\r\n        .then(obj => {\r\n          if (obj.total === 0) {\r\n            return this.setState({ status: 'notfound' });\r\n          }\r\n        })\r\n\r\n        .catch(error => this.setState({ error, status: 'rejected' }));\r\n    }\r\n  }\r\n  onPageChange = page => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  render() {\r\n    // const { request } = this.props;\r\n    const { pictures, status, error } = this.state;\r\n    const { request } = this.props;\r\n    if (status === 'idle') {\r\n      return <div> There will be pictures for you request...</div>;\r\n    }\r\n    if (status === 'pending') {\r\n      return <LoaderPics />;\r\n    }\r\n    if (status === 'notfound') {\r\n      return <div>We did't find pictures for request {request}</div>;\r\n    }\r\n    if (status === 'rejected') {\r\n      return <div>We have a problem {error}</div>;\r\n    }\r\n    if (status === 'resolved') {\r\n      return (\r\n        <div>\r\n          <ul className=\"ImageGallery\">\r\n            {pictures.map(pic => (\r\n              <ImageGalleryItem key={pic.id} pic={pic} />\r\n            ))}\r\n          </ul>\r\n          <Button onPageChange={this.onPageChange} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Component } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n  state = {\n    request: ' ',\n  };\n  submiteData = request => {\n    this.setState({ request });\n  };\n\n  render() {\n    const { request } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.submiteData} />\n        <ImageGallery request={request} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}