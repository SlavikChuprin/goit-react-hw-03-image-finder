{"version":3,"sources":["components/NotFound/NotFound.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/services/Pixabay-api.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","components/NotFound/NotFound.js","App.js","index.js"],"names":["module","exports","Searchbar","state","request","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","propsType","PropTypes","func","isRequired","ImageGalleryItem","openModal","id","onClick","tag","pic","src","alt","webformatURL","string","tags","key","number","ImageGallery","pics","onClickForModal","map","arrayOf","api","fetchPictures","page","fetch","then","response","json","LoaderPics","color","height","width","timeout","Button","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","console","log","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","NotFound","s","App","status","picForModal","fetchPic","picsAPI","res","total","hits","largeImageURL","prevState","catch","error","submitData","onPageChange","onModalToggle","showModal","onClickLargeImage","find","prevProps","prevRequest","nextRequest","prevPage","nextPage","scrollTo","top","documentElement","scrollHeight","behavior","area","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.65fa6f94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFound\":\"NotFound_NotFound__15scM\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles.css';\r\n\r\nclass Searchbar extends Component {\r\n  static propsType = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    request: '',\r\n  };\r\n\r\n  handleNameChange = event => {\r\n    this.setState({ request: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.request);\r\n  };\r\n\r\n  render() {\r\n    const { request } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={request}\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  static propsType = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    key: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  openModal = () => {\r\n    const { id } = this.props;\r\n    this.props.onClick(id);\r\n  };\r\n\r\n  render() {\r\n    const { id, tag, pic } = this.props;\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          id={id}\r\n          src={pic}\r\n          alt={tag}\r\n          className=\"ImageGalleryItem-image\"\r\n          onClick={this.openModal}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ pics, tag, onClickForModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {pics.map(({ id, webformatURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          id={id}\r\n          tag={tag}\r\n          pic={webformatURL}\r\n          onClick={onClickForModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propsType = {\r\n  request: PropTypes.string.isRequired,\r\n  id: PropTypes.arrayOf(PropTypes.number.isRequired),\r\n  webformatURL: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","function fetchPictures(request, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${request}&page=${page}&key=23343494-643d22eb41994b430f7c237c0&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => response.json());\r\n}\r\n\r\nconst api = {\r\n  fetchPictures,\r\n};\r\n\r\nexport default api;\r\n","import Loader from 'react-loader-spinner';\r\nimport { Component } from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nexport default class LoaderPics extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    dataForMadal: PropTypes.shape({\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string,\r\n    }),\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { pic, tags } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={pic} alt={tags} />\r\n        </div>\r\n      </div>,\r\n\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './NotFound.module.css';\r\n\r\nexport default function NotFound({ request }) {\r\n  return (\r\n    <div className={s.NotFound}>\r\n      Sorry, we have not pictures for request : '{request}'\r\n    </div>\r\n  );\r\n}\r\n\r\nNotFound.propTypes = {\r\n  error: PropTypes.string,\r\n};\r\n","import { Component } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport picsAPI from './components/services/Pixabay-api';\nimport LoaderPics from './components/Loader';\nimport Button from './components/Button/';\nimport Modal from './components/Modal';\nimport NotFound from './components/NotFound';\n\nclass App extends Component {\n  state = {\n    status: 'idle',\n    request: '',\n    pics: [],\n    picForModal: '',\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevRequest = prevState.request;\n    const nextRequest = this.state.request;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevRequest !== nextRequest) {\n      this.setState({\n        pics: [],\n        page: 1,\n      });\n      this.fetchPic();\n      console.log('я сработал 1');\n    }\n\n    if (prevPage !== nextPage && nextPage !== 1) {\n      console.log(nextPage);\n      console.log('я сработал 2');\n\n      this.fetchPic();\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n  fetchPic = ({ request, page } = this.state) => {\n    this.setState({ status: 'pending' });\n    picsAPI\n      .fetchPictures(request, page)\n      .then(res => {\n        if (res.total === 0) {\n          this.setState({\n            status: 'rejected',\n          });\n          console.log(res);\n        }\n        return res;\n      })\n      .then(res => {\n        console.log(res);\n        res.hits.map(({ id, webformatURL, largeImageURL }) =>\n          this.setState(prevState => ({\n            // idArray: [...prevState.idArray, id],\n            // webformatURL: [...prevState.webformatURL, webformatURL],\n            // largeImageURL: [...prevState.largeImageURL, largeImageURL],\n            pics: [...prevState.pics, { id, webformatURL, largeImageURL }],\n            status: 'resolved',\n          })),\n        );\n      })\n      .catch(error => {\n        this.setState({ status: 'rejected' });\n      });\n  };\n  submitData = request => {\n    this.setState({ request });\n  };\n  onPageChange = e => {\n    e.preventDefault();\n    this.setState(({ page }) => ({ page: page + 1, status: 'pending' }));\n  };\n\n  onModalToggle = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n  onClickLargeImage = id => {\n    this.setState(({ pics }) => ({\n      picForModal: pics.find(pic => pic.id === id).largeImageURL,\n    }));\n    this.onModalToggle();\n  };\n\n  render() {\n    const {\n      status,\n      request,\n      // idArray,\n      // webformatURL,\n      // largeImageURL,\n      showModal,\n      pics,\n      picForModal,\n    } = this.state;\n\n    let area;\n\n    if (status === 'idle') {\n      area = <div> There will be pictures for you request...</div>;\n    }\n    if (status === 'pending') {\n      area = <LoaderPics />;\n    }\n    if (status === 'rejected') {\n      area = <NotFound request={request} />;\n    }\n    if (status === 'resolved') {\n      area = (\n        <div>\n          <ImageGallery\n            pics={pics}\n            tag={request}\n            onClickForModal={this.onClickLargeImage}\n          />\n          <Button onClick={this.onPageChange} />\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.submitData} />\n        {area}\n\n        {showModal && (\n          <Modal pic={picForModal} tag={request} onClose={this.onModalToggle} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}