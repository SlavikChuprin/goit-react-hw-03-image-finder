{"version":3,"sources":["components/NotFound/NotFound.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/services/Pixabay-api.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","components/NotFound/NotFound.js","App.js","index.js"],"names":["module","exports","Searchbar","state","request","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","propsType","PropTypes","func","isRequired","ImageGalleryItem","openModal","e","id","onClick","tag","pic","src","alt","webformatURL","string","tags","key","number","ImageGallery","idArray","onModalToggle","children","map","i","arrayOf","api","fetchPictures","page","fetch","then","response","json","LoaderPics","color","height","width","timeout","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","NotFound","s","App","status","largeImageURL","numOfpic","fetchPic","name","picsAPI","res","total","hits","prevState","catch","error","submitData","onPageChange","scrollTo","top","documentElement","scrollHeight","behavior","showModal","indexOf","prevProps","prevRequest","nextRequest","prevPage","nextPage","area","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.991cdd1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFound\":\"NotFound_NotFound__15scM\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles.css';\r\n\r\nclass Searchbar extends Component {\r\n  static propsType = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    request: '',\r\n  };\r\n\r\n  handleNameChange = event => {\r\n    this.setState({ request: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.request);\r\n  };\r\n\r\n  render() {\r\n    const { request } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={request}\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  static propsType = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    key: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  // state = {\r\n  //   key: null,\r\n  // };\r\n  openModal = e => {\r\n    const { id } = this.props;\r\n    // this.setState({ key });\r\n\r\n    this.props.onClick(id);\r\n  };\r\n  render() {\r\n    const { id, tag, pic } = this.props;\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          id={id}\r\n          src={pic}\r\n          alt={tag}\r\n          className=\"ImageGalleryItem-image\"\r\n          onClick={this.openModal}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n// import LoaderPics from '../Loader';\r\n// import Button from '../Button/';\r\n// import Modal from '../Modal';\r\n// import NotFound from '../NotFound';\r\n\r\nexport default class ImageGallery extends Component {\r\n  static propsType = {\r\n    request: PropTypes.string.isRequired,\r\n    id: PropTypes.arrayOf(PropTypes.number.isRequired),\r\n    webformatURL: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { request, idArray, webformatURL } = this.props.props;\r\n    const { onModalToggle, children } = this.props;\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        {idArray.map((id, i) => (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            id={id}\r\n            tag={request}\r\n            pic={webformatURL[i]}\r\n            onClick={onModalToggle}\r\n          />\r\n        ))}\r\n        {children}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","function fetchPictures(request, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${request}&page=${page}&key=23343494-643d22eb41994b430f7c237c0&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => response.json());\r\n}\r\n\r\nconst api = {\r\n  fetchPictures,\r\n};\r\n\r\nexport default api;\r\n","import Loader from 'react-loader-spinner';\r\nimport { Component } from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nexport default class LoaderPics extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    dataForMadal: PropTypes.shape({\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string,\r\n    }),\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { pic, tags } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={pic} alt={tags} />\r\n        </div>\r\n      </div>,\r\n\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './NotFound.module.css';\r\n\r\nexport default function NotFound({ request }) {\r\n  return (\r\n    <div className={s.NotFound}>\r\n      Sorry, we have not pictures for request : '{request}'\r\n    </div>\r\n  );\r\n}\r\n\r\nNotFound.propTypes = {\r\n  error: PropTypes.string,\r\n};\r\n","import { Component } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport picsAPI from './components/services/Pixabay-api';\nimport LoaderPics from './components/Loader';\nimport Button from './components/Button/';\nimport Modal from './components/Modal';\nimport NotFound from './components/NotFound';\n\nclass App extends Component {\n  state = {\n    status: 'idle',\n    request: '',\n    idArray: [],\n    webformatURL: [],\n    largeImageURL: [],\n    numOfpic: null,\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevRequest = prevState.request;\n    const nextRequest = this.state.request;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevRequest !== nextRequest) {\n      this.setState({\n        idArray: [],\n        webformatURL: [],\n        largeImageURL: [],\n        page: 1,\n      });\n      this.fetchPic(nextRequest, nextPage);\n      console.log('я сработал 1');\n    }\n\n    if (prevPage !== nextPage && nextPage !== 1) {\n      console.log(nextPage);\n      console.log('я сработал 2');\n\n      this.fetchPic(nextRequest, nextPage);\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n  fetchPic = (name, page) => {\n    this.setState({ status: 'pending' });\n    picsAPI\n      .fetchPictures(name, page)\n      .then(res => {\n        if (res.total === 0) {\n          this.setState({\n            request: name,\n            status: 'rejected',\n          });\n          console.log(res);\n        }\n        return res;\n      })\n      .then(res => {\n        console.log(res);\n        res.hits.map(({ id, webformatURL, largeImageURL }) =>\n          this.setState(prevState => ({\n            idArray: [...prevState.idArray, id],\n            webformatURL: [...prevState.webformatURL, webformatURL],\n            largeImageURL: [...prevState.largeImageURL, largeImageURL],\n            status: 'resolved',\n          })),\n        );\n      })\n      .catch(error => {\n        this.setState({ request: name, status: 'rejected' });\n      });\n  };\n  submitData = request => {\n    this.setState({ request });\n  };\n  onPageChange = () => {\n    this.setState(({ page }) => ({ page: page + 1, status: 'pending' }));\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  onModalToggle = id => {\n    this.setState(({ showModal, idArray }) => ({\n      showModal: !showModal,\n      numOfpic: idArray.indexOf(id),\n    }));\n  };\n  render() {\n    const {\n      status,\n      request,\n      idArray,\n      webformatURL,\n      showModal,\n      largeImageURL,\n      numOfpic,\n    } = this.state;\n\n    let area;\n\n    if (status === 'idle') {\n      area = <div> There will be pictures for you request...</div>;\n    }\n    if (status === 'pending') {\n      area = <LoaderPics />;\n    }\n    if (status === 'rejected') {\n      area = <NotFound request={request} />;\n    }\n    if (status === 'resolved') {\n      area = (\n        <div>\n          <ImageGallery\n            props={{ request, idArray, webformatURL }}\n            onModalToggle={this.onModalToggle}\n          ></ImageGallery>\n          <Button onClick={this.onPageChange} />\n          {showModal && (\n            <Modal\n              pic={largeImageURL[numOfpic]}\n              tag={request}\n              onClose={this.onModalToggle}\n            />\n          )}\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.submitData} />\n        {area}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}